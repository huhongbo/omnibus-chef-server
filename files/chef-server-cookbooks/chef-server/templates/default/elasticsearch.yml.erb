cluster.name: <%= @clustername %>
node.name: <%= @nodename %>
node.master: <%= @master %>
node.data: true
node.max_local_storage_nodes: <%= @max_local %>
index.number_of_shards: <%= @nshards %>
index.number_of_replicas: <%= @nreplicas %>
path.data: <%= @data_dir %>
path.work: <%= @work_dir %>
path.logs: <%= @log_directory %>
path.plugins: <%= @plugin_dir %>
bootstrap.mlockall: true
transport.tcp.compress: true

index:
  analysis:
    tokenizer:
      my_pinyin:
          type: pinyin
          first_letter: "prefix"
          padding_char: ""
      pinyin_first_letter:
          type: pinyin
          first_letter: "only"
      mmseg_maxword:
          type: mmseg
          seg_type: "max_word"
      mmseg_complex:
          type: mmseg
          seg_type: "complex"
      mmseg_simple:
          type: mmseg
          seg_type: "simple"
      semicolon_spliter:
          type: pattern
          pattern: ";"
      pct_spliter:
          type: "pattern"
          pattern: "[%]+"
      s2t_convert:
          type: "stconvert"
          delimiter: ","
          convert_type: "s2t"
      t2s_convert:
          type: "stconvert"
          delimiter: ","
          convert_type: "t2s"
      s2t_keep_both_convert:
          type: "stconvert"
          delimiter: ","
          keep_both: "true"
          convert_type: "s2t"
      t2s_keep_both_convert:
          type: "stconvert"
          delimiter: ","
          keep_both: "true"
          convert_type: "t2s"

    filter:
      ngram_min_2:
          max_gram: 10
          min_gram: 2
          type: nGram
      ngram_min_1:
          max_gram: 10
          min_gram: 1
          type: nGram
      min2_length:
          min:  2
          max:  4
          type: length
      s2t_convert:
          type: "stconvert"
          delimiter: ","
          convert_type: "s2t"
      t2s_convert:
          type: "stconvert"
          delimiter: ","
          convert_type: "t2s"
      s2t_keep_both_convert:
          type: "stconvert"
          delimiter: ","
          keep_both: "true"
          convert_type: "s2t"
      t2s_keep_both_convert:
          type: "stconvert"
          delimiter: ","
          keep_both: "true"
          convert_type: "t2s"
      my_string2int:
          type: "string2int"
          redis_server: "127.0.0.1"
          redis_port: 6379
          redis_key: "index1_type2_name2"

    analyzer:
      lowercase_keyword:
          type: custom
          filter: [standard,lowercase]
          tokenizer: standard
      lowercase_keyword_ngram_min_size1:
          type: custom
          filter: [ngram_min_1,standard,lowercase]
          tokenizer: nGram
      lowercase_keyword_ngram_min_size2:
          type: custom
          filter: [ngram_min_2,standard,lowercase,min2_length,stop]
          tokenizer: nGram
      lowercase_keyword_ngram:
          type: custom
          filter: [ngram_min_1,standard,lowercase]
          tokenizer: nGram
      lowercase_keyword_without_standard:
          type: custom
          filter: [lowercase]
          tokenizer: keyword
      lowercase_whitespace:
          type: custom
          filter: [lowercase]
          tokenizer: whitespace
      ik:
          alias: [ik_analyzer]
          type: org.elasticsearch.index.analysis.IkAnalyzerProvider
      ik_max_word:
          type: ik
          use_smart: false
      ik_smart:
          type: ik
          use_smart: true
      mmseg:
          alias: [mmseg_analyzer]
          type: org.elasticsearch.index.analysis.MMsegAnalyzerProvider
      comma_spliter:
          type: "pattern"
          pattern: "[,|\\s]+"
      pct_spliter:
          type: "pattern"
          pattern: "[%]+"
      custom_snowball_analyzer:
          type: "snowball"
          language: "English"
      simple_english_analyzer:
          type: "custome"
          tokenizer: whitespace
          filter: [standard,lowercase,snowball]
      edge_ngram:
          type: custom
          tokenizer: edgeNGram
          filter: [lowercase]
      pinyin_ngram_analyzer:
          type: custom
          tokenizer: my_pinyin
          filter: [standard,lowercase,nGram]
      pinyin_first_letter_analyzer:
          type: custom
          tokenizer: pinyin_first_letter
          filter: [standard,lowercase]
      paoding:
          alias: [paoding_analyzer]
          type: org.elasticsearch.index.analysis.PaodingAnalyzerProvider
      stconvert:
          alias: [st_analyzer]
          type: org.elasticsearch.index.analysis.STConvertAnalyzerProvider
      s2t_convert:
          type: "stconvert"
          delimiter: ","
          convert_type: "s2t"
      t2s_convert:
          type: "stconvert"
          delimiter: ","
          convert_type: "t2s"
      s2t_keep_both_convert:
          type: "stconvert"
          delimiter: ","
          keep_both: "true"
          convert_type: "s2t"
      t2s_keep_both_convert:
          type: "stconvert"
          delimiter: ","
          keep_both: "true"
          convert_type: "t2s"
      string2int:
          type: org.elasticsearch.index.analysis.String2IntAnalyzerProvider
          redis_server: "127.0.0.1"
          redis_port: 6379
          redis_key: "index1_type1_name1"
      custom_string2int:
          type: custom
          tokenizer: whitespace
          filter: [my_string2int,lowercase]
      ansj:
          alias: [ansj_analyzer]
          type: org.elasticsearch.index.analysis.AnsjAnalyzerProvider

index.analysis.analyzer.default.type : "ik"
